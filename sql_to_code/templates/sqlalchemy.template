from sqlalchemy import Column, Integer, String, ForeignKey, ENUM
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

{% for enum in g.enums %}
{{ enum.name }} = ENUM(
    {% for value in enum.values %}
        {{ value }},
    {% endfor %} name="{{ enum.name }}"
)
{% endfor %}

{% for table in g.tables %}
class {{ table.class_name }}(Base):
    __tablename__ = "{{ table.table_name }}"

    {% for field in table.fields %}
        {{ field.name }} = Column({{ field.type }}{% if field.primary_key %}, primary_key=True{% endif %})
    {% endfor %}

    {% for field in table.foreign_keys %}
        {{ field.name }} = Column({{ field.type }}, ForeignKey("{{ field.result_table_name }}"), ondelete="CASCADE")
    {% endfor %}
{% endfor %}
